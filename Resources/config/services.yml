parameters:
    mykees.comment.class: Mykees\CommentBundle\Entity\Comment

services:
#    mykees_comment.example:
#        class: Mykees\CommentBundle\Example
#        arguments: [@service_id, "plain_value", %parameter%]
    mykees.comment.form:
        class: Mykees\CommentBundle\Form\Type\CommentType
        arguments: [%mykees.comment.class%,@security.context]
        tags:
            - { name: form.type, alias: mykees_commentbundle_comment }

    mykees.comment.manager:
        class: Mykees\CommentBundle\Manager\CommentManager
        arguments: [@form.factory, @router, @session, @mykees.comment.form, %mykees_comment.comment.class%]

    mykees.comment.query.manager:
        class: Mykees\CommentBundle\Manager\CommentQueryManager
        arguments: [@doctrine, %mykees_comment.comment.class%]

    mykees.twig.form.extension:
        class: Mykees\CommentBundle\Twig\Extension\CommentExtension
        tags:
            - { name: twig.extension, alias: comment_form }

    mykees.twig.md5extension:
        class: Mykees\CommentBundle\Twig\Extension\Md5Extension
        tags:
            - { name: twig.extension, alias: md5_ext }


    mk.comment.listener:
        class: Mykees\CommentBundle\Listener\CommentListener
        arguments: [@doctrine, %mykees_comment.comment.class%, "@=container.hasParameter('fos_user.model.user.class') ? parameter('fos_user.model.user.class') : null"]
        tags:
            - { name: doctrine.event_listener, event: preRemove, method: preRemove }
